# --------- NETWORK ----------
tsd.network.port = 4242

# ----------- HTTP -----------
tsd.http.staticroot = {{ deployDir }}/static
tsd.http.cachedir = /tmp/opentsdb
tsd.http.request.cors_domains = *

# --------- CORE ----------
tsd.core.auto_create_metrics = true
tsd.core.plugin_path = {{ deployDir }}/plugins
{% if is_read_node == 'true' and is_write_node == 'true' %}
tsd.mode = rw
{% endif %}
{% if is_read_node == 'false' and is_write_node == 'true' %}
tsd.mode = wo
{% endif %}
{% if is_read_node == 'true' and is_write_node == 'false' %}
tsd.mode = ro
{% endif %}

# --------- STORAGE ----------
{% if is_compaction_node == 'true' %}
tsd.storage.enable_compaction = true
tsd.storage.fix_duplicates = true
{% else %}
tsd.storage.enable_compaction = false
{% endif %}

tsd.storage.hbase.data_table = tsdb
tsd.storage.hbase.meta_table = tsdb-meta
tsd.storage.hbase.uid_table = tsdb-uid
tsd.storage.hbase.tree_table = tsdb-tree
tsd.storage.hbase.zk_basedir = /hbase
tsd.storage.hbase.zk_quorum = {{ zookeeper_quorum }}

# -------- KERBEROS -----------
hbase.security.auth.enable = true
hbase.security.authentication = kerberos
hbase.kerberos.regionserver.principal = {{ kerberos_principal }}
hbase.sasl.clientconfig = Client